import '/dg/parse'
import '/dg/compileast'

import '/prompt_toolkit/contrib/completers/WordCompleter'
import '/prompt_toolkit/prompt'
import '/prompt_toolkit/history/FileHistory'
import '/prompt_toolkit/styles/style_from_dict'
import '/prompt_toolkit/token/Token'

import '/os'
import '/sys'

example_style = style_from_dict(dict'
    # User input.
    (Token,          '#ffffff')

    # Prompt.
    (Token.Username, '#884444 italic')
    (Token.At,       '#00aa00')
    (Token.Colon,    '#00aa00')
    (Token.Pound,    '#00aa00')
    (Token.Host,     '#000088 bg:#aaaaff')
    (Token.Path,     '#884444 underline')

    # Make a selection reverse/underlined.
    # (Use Control-Space to select.)
    (Token.SelectedText, 'reverse underline')
)

get_prompt_tokens = cli ->
    return [
        (Token.Username, 'john')
        (Token.At,       '@')
        (Token.Host,     'localhost')
        (Token.Colon,    ':')
        (Token.Path,     '/user/john')
        (Token.Pound,    'ptdg> ')
    ]

get_title = ->
    "dogelang prompt"

dg_completer = WordCompleter
             ['bind', 'break', 'continue', 'flip', 'foldl', 'foldl1', 'drop', 'dropwhile', 'iterate', 'scanl', 'scanl1', 'take', 'takewhile', 'exhaust', 'head', 'fst', 'snd', 'tail', 'init', 'last', 'map', 'filter']
             ignore_case:False


main = ->
    while True =>
        except
            err =>
                our_history = FileHistory '.ptdg_hist'
                cmd = prompt
                       ## multiline         :True
                       history           :our_history
                       style             :example_style
                       get_prompt_tokens :get_prompt_tokens
                       get_title         :get_title
                       completer         :dg_completer

            err :: EOFError =>
                break! # Ctr-D

        tree = parse cmd
        res = eval $ compileast tree, sys.modules
        print $ res !! 0

if __name__ == '__main__' =>
   main!
